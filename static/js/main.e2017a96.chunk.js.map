{"version":3,"sources":["Components/DrumPad.js","Components/Panel.js","sounds/sounds.js","Components/DrumMachine.js","Components/Main.js","serviceWorker.js","index.js"],"names":["DrumPad","state","style","backgroundColor","activeStyle","drumpadKey","drumpadActive","stylePad","_this","setState","keyPress","event","keyTrigger","props","key","toUpperCase","test","playSound","_this$props","soundName","power","audio","document","getElementById","volume","currentTime","play","displaySound","setTimeout","addEventListener","this","removeEventListener","_this$props2","sound","index","react_default","a","createElement","className","id","onClick","src","Component","Panel","display","type","min","max","step","value","volumen","onChange","volumenChange","switch","checked","powerChange","href","switchOne","url","switchTwo","keyCode","DrumMachine","currentSwitch","selectedSwitch","parseFloat","target","displayPower","switchSound","_this2","_this$state","map","_ref","indx","Components_DrumPad","Components_Panel","Main","class","Components_DrumMachine","Boolean","window","location","hostname","match","ReactDOM","render","Components_Main","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2017a96.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../css/DrumPad.css\";\r\n\r\n\r\nclass DrumPad extends Component {\r\n\tstate = {\r\n\t\tstyle: { backgroundColor: \"\" }\r\n\t};\r\n\r\n\tactiveStyle = drumpadKey => {\r\n\t\tlet drumpadActive = \"\";\r\n\r\n\t\tswitch (drumpadKey) {\r\n\t\t\tdefault:\r\n\t\t\t\tdrumpadActive = \"\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"Q\":\r\n\t\t\tcase \"W\":\r\n\t\t\tcase \"E\":\r\n\t\t\t\tdrumpadActive = \"red\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"A\":\r\n\t\t\tcase \"S\":\r\n\t\t\tcase \"D\":\r\n\t\t\t\tdrumpadActive = \"blue\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"Z\":\r\n\t\t\tcase \"X\":\r\n\t\t\tcase \"C\":\r\n\t\t\t\tdrumpadActive = \"yellow\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst stylePad = { backgroundColor: drumpadActive };\r\n\t\tthis.state.style.backgroundColor === drumpadActive\r\n\t\t\t? this.setState({ style: { backgroundColor: \"\" } })\r\n\t\t\t: this.setState({ style: stylePad });\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keypress\", this.keyPress);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keypress\", this.keyPress);\r\n\t}\r\n\r\n\tkeyPress = event => {\r\n\t\tconst { keyTrigger } = this.props;\r\n\t\tconst params = /[qweasdzxc]/gi; //teclas permitidas.\r\n\t\tconst key = event.key.toUpperCase();\r\n\t\tif (params.test(event.key)) {\r\n\t\t\tif (keyTrigger === key) {\r\n\t\t\t\tthis.playSound();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tplaySound = () => {\r\n\t\tconst { soundName, power, keyTrigger } = this.props;\r\n\t\tif (power) {\r\n\t\t\tconst audio = document.getElementById(keyTrigger);\r\n\t\t\taudio.volume = this.props.volume;\r\n\t\t\taudio.currentTime = 0.0;\r\n\t\t\taudio.play();\r\n\t\t\tthis.props.displaySound(soundName);\r\n\t\t\tthis.activeStyle(keyTrigger);\r\n\t\t\tsetTimeout(() => this.activeStyle(keyTrigger), 250);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { soundName, sound, keyTrigger, index } = this.props;\r\n\t\tconst { style } = this.state;\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={\"drum-pad-\" + index}\r\n\t\t\t\tid={soundName}\r\n\t\t\t\tonClick={this.playSound}\r\n\t\t\t\tstyle={style}>\r\n\t\t\t\t<label>{keyTrigger}</label>\r\n\t\t\t\t<audio\r\n\t\t\t\t\tclassName={\"clip-\" + index}\r\n\t\t\t\t\tid={keyTrigger}\r\n\t\t\t\t\tsrc={sound}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default DrumPad;\r\n","import React from \"react\";\r\nimport \"../css/Panel.css\";\r\nconst Panel = props => {\r\n\treturn (\r\n\t\t<div id=\"display\">\r\n\t\t\t<p className=\"display-panel\">{props.display}</p>\r\n\t\t\t<div className=\"volume-panel\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\tmin={0}\r\n\t\t\t\t\tmax={1}\r\n\t\t\t\t\tstep={0.1}\r\n\t\t\t\t\tvalue={props.volumen}\r\n\t\t\t\t\tonChange={props.volumenChange}\r\n\t\t\t\t\tclassName=\"volume-input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<p>Volume</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"switch-panel\">\r\n\t\t\t\t<p>Switch</p>\r\n\t\t\t\t<label className=\"switch\">\r\n\t\t\t\t\t<input type=\"checkbox\" onChange={props.switch} />\r\n\t\t\t\t\t<span className=\"slider\" />\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"power-panel\">\r\n\t\t\t\t<p>Power</p>\r\n\t\t\t\t<label className=\"switch\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tchecked={props.power}\r\n\t\t\t\t\t\tonChange={props.powerChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"slider\" />\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"gh-item\">\r\n\t\t\t\tby{\" \"}\r\n\t\t\t\t<a href=\"https://github.com/Belquira\">\r\n\t\t\t\t\tbelquira <i className=\"fab fa-github-alt\" />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Panel;\r\n","\r\nexport const switchOne = [{\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3' },\r\n  {\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3' },\r\n  {\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3' },\r\n  {\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3' },\r\n  {\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3' },\r\n  {\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3' },\r\n  {\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3' },\r\n  {\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3' },\r\n  {\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3' }\r\n];\r\n\r\n\r\nexport const switchTwo = [{\r\n  keyCode: 81,\r\n  keyTrigger: 'Q',\r\n  id: 'Chord-1',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3' },\r\n{\r\n  keyCode: 87,\r\n  keyTrigger: 'W',\r\n  id: 'Chord-2',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3' },\r\n{\r\n  keyCode: 69,\r\n  keyTrigger: 'E',\r\n  id: 'Chord-3',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3' },\r\n{\r\n  keyCode: 65,\r\n  keyTrigger: 'A',\r\n  id: 'Shaker',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3' },\r\n{\r\n  keyCode: 83,\r\n  keyTrigger: 'S',\r\n  id: 'Open-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3' },\r\n{\r\n  keyCode: 68,\r\n  keyTrigger: 'D',\r\n  id: 'Closed-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3' },\r\n{\r\n  keyCode: 90,\r\n  keyTrigger: 'Z',\r\n  id: 'Punchy-Kick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3' },\r\n{\r\n  keyCode: 88,\r\n  keyTrigger: 'X',\r\n  id: 'Side-Stick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3' },\r\n{\r\n  keyCode: 67,\r\n  keyTrigger: 'C',\r\n  id: 'Snare',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3' }];\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport DrumPad from \"./DrumPad\";\r\nimport Panel from \"./Panel\";\r\nimport { switchOne, switchTwo } from \"../sounds/sounds\";\r\nimport \"../css/Container.css\";\r\n\r\nclass DrumMachine extends Component {\r\n\tstate = {\r\n\t\tvolumen: 0.5,\r\n\t\tpower: true,\r\n\t\tdisplay: \"Heater-Kit\",\r\n\t\tcurrentSwitch: switchOne,\r\n\t\tselectedSwitch: \"one\"\r\n\t};\r\n\r\n\tvolumenChange = event => {\r\n\t\tconst { power } = this.state;\r\n\t\tif (power) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tvolumen: parseFloat(event.target.value),\r\n\t\t\t\tdisplay: \"Volume: \" + event.target.value * 100\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tpowerChange = event => {\r\n\t\tconst displayPower = this.state.power ? \"Power OFF\" : \"Power ON\";\r\n\t\tthis.setState({\r\n\t\t\tpower: event.target.checked,\r\n\t\t\tdisplay: displayPower\r\n\t\t});\r\n\t};\r\n\r\n\tdisplaySound = id => {\r\n\t\tthis.setState({\r\n\t\t\tdisplay: id\r\n\t\t});\r\n\t};\r\n\r\n\tswitchSound = () => {\r\n\t\tconst { selectedSwitch } = this.state;\r\n\t\tif (selectedSwitch === \"one\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentSwitch: switchTwo,\r\n\t\t\t\tselectedSwitch: \"two\",\r\n\t\t\t\tdisplay: \"Piano Kit\"\r\n\t\t\t});\r\n\t\t} else\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentSwitch: switchOne,\r\n\t\t\t\tselectedSwitch: \"one\",\r\n\t\t\t\tdisplay: \"Heater Kit\"\r\n\t\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { volumen, power, currentSwitch } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div id=\"drum-machine\">\r\n\t\t\t\t\t<div id=\"pads-panel\">\r\n\t\t\t\t\t\t{currentSwitch.map(({ keyTrigger, id, url }, indx) => (\r\n\t\t\t\t\t\t\t<DrumPad\r\n\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\tkeyTrigger={keyTrigger}\r\n\t\t\t\t\t\t\t\tsound={url}\r\n\t\t\t\t\t\t\t\tvolume={volumen}\r\n\t\t\t\t\t\t\t\tpower={power}\r\n\t\t\t\t\t\t\t\tsoundName={id}\r\n\t\t\t\t\t\t\t\tdisplaySound={this.displaySound}\r\n\t\t\t\t\t\t\t\tindex={indx + 1}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Panel\r\n\t\t\t\t\t\tvolumen={volumen}\r\n\t\t\t\t\t\tpower={power}\r\n\t\t\t\t\t\tvolumenChange={this.volumenChange}\r\n\t\t\t\t\t\tpowerChange={this.powerChange}\r\n\t\t\t\t\t\tdisplay={this.state.display}\r\n\t\t\t\t\t\tswitch={this.switchSound}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default DrumMachine;\r\n","import React, { Component } from \"react\";\nimport \"../css/Main.css\";\nimport DrumMachine from \"../Components/DrumMachine\";\n\nclass Main extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h2>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tPLAY MUSIC! <i class=\"fas fa-music\" />\n\t\t\t\t</h2>\n\t\t\t\t<DrumMachine />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/Main\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}